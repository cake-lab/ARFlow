syntax = "proto3";

package cakelab.arflow_grpc.v1;

import "cakelab/arflow_grpc/v1/create_session_request.proto";
import "cakelab/arflow_grpc/v1/create_session_response.proto";
import "cakelab/arflow_grpc/v1/delete_session_request.proto";
import "cakelab/arflow_grpc/v1/delete_session_response.proto";
import "cakelab/arflow_grpc/v1/get_session_request.proto";
import "cakelab/arflow_grpc/v1/get_session_response.proto";
import "cakelab/arflow_grpc/v1/join_session_request.proto";
import "cakelab/arflow_grpc/v1/join_session_response.proto";
import "cakelab/arflow_grpc/v1/leave_session_request.proto";
import "cakelab/arflow_grpc/v1/leave_session_response.proto";
import "cakelab/arflow_grpc/v1/list_sessions_request.proto";
import "cakelab/arflow_grpc/v1/list_sessions_response.proto";
import "cakelab/arflow_grpc/v1/save_ar_frames_request.proto";
import "cakelab/arflow_grpc/v1/save_ar_frames_response.proto";
import "cakelab/arflow_grpc/v1/save_synchronized_ar_frame_request.proto";
import "cakelab/arflow_grpc/v1/save_synchronized_ar_frame_response.proto";

option csharp_namespace = "CakeLab.ARFlow.Grpc.V1";

/**
 * ARFlowService provides a set of RPCs to manage AR sessions and save AR frames.
 */
service ARFlowService {
  /// Create a new session and bind it to a new recording stream.
  rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse);
  /// Delete a session and disconnect from its associated recording stream.
  rpc DeleteSession(DeleteSessionRequest) returns (DeleteSessionResponse);
  /// Retrieve a session information.
  rpc GetSession(GetSessionRequest) returns (GetSessionResponse);
  /// List all current sessions.
  rpc ListSessions(ListSessionsRequest) returns (ListSessionsResponse);
  /// Join a session.
  rpc JoinSession(JoinSessionRequest) returns (JoinSessionResponse);
  /// Leave a session.
  rpc LeaveSession(LeaveSessionRequest) returns (LeaveSessionResponse);
  /// Save AR frames from a device to its session's recording stream.
  rpc SaveARFrames(SaveARFramesRequest) returns (SaveARFramesResponse);
  /// Save an synchronized AR frame from a device to its session's recording stream.
  /// This is our old approach and we're keeping this for benchmarking purposes.
  rpc SaveSynchronizedARFrame(SaveSynchronizedARFrameRequest) returns (SaveSynchronizedARFrameResponse);
}
