// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cakelab/arflow_grpc/v1/synchronized_ar_frame.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CakeLab.ARFlow.Grpc.V1 {

  /// <summary>Holder for reflection information generated from cakelab/arflow_grpc/v1/synchronized_ar_frame.proto</summary>
  public static partial class SynchronizedArFrameReflection {

    #region Descriptor
    /// <summary>File descriptor for cakelab/arflow_grpc/v1/synchronized_ar_frame.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SynchronizedArFrameReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJjYWtlbGFiL2FyZmxvd19ncnBjL3YxL3N5bmNocm9uaXplZF9hcl9mcmFt",
            "ZS5wcm90bxIWY2FrZWxhYi5hcmZsb3dfZ3JwYy52MRooY2FrZWxhYi9hcmZs",
            "b3dfZ3JwYy92MS9hdWRpb19mcmFtZS5wcm90bxooY2FrZWxhYi9hcmZsb3df",
            "Z3JwYy92MS9jb2xvcl9mcmFtZS5wcm90bxooY2FrZWxhYi9hcmZsb3dfZ3Jw",
            "Yy92MS9kZXB0aF9mcmFtZS5wcm90bxosY2FrZWxhYi9hcmZsb3dfZ3JwYy92",
            "MS9neXJvc2NvcGVfZnJhbWUucHJvdG8aMWNha2VsYWIvYXJmbG93X2dycGMv",
            "djEvbWVzaF9kZXRlY3Rpb25fZnJhbWUucHJvdG8aMmNha2VsYWIvYXJmbG93",
            "X2dycGMvdjEvcGxhbmVfZGV0ZWN0aW9uX2ZyYW1lLnByb3RvGjhjYWtlbGFi",
            "L2FyZmxvd19ncnBjL3YxL3BvaW50X2Nsb3VkX2RldGVjdGlvbl9mcmFtZS5w",
            "cm90bxosY2FrZWxhYi9hcmZsb3dfZ3JwYy92MS90cmFuc2Zvcm1fZnJhbWUu",
            "cHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8i/QUKE1N5",
            "bmNocm9uaXplZEFSRnJhbWUSRQoQZGV2aWNlX3RpbWVzdGFtcBgBIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBSD2RldmljZVRpbWVzdGFtcBJP",
            "Cg90cmFuc2Zvcm1fZnJhbWUYAiABKAsyJi5jYWtlbGFiLmFyZmxvd19ncnBj",
            "LnYxLlRyYW5zZm9ybUZyYW1lUg50cmFuc2Zvcm1GcmFtZRJDCgtjb2xvcl9m",
            "cmFtZRgDIAEoCzIiLmNha2VsYWIuYXJmbG93X2dycGMudjEuQ29sb3JGcmFt",
            "ZVIKY29sb3JGcmFtZRJDCgtkZXB0aF9mcmFtZRgEIAEoCzIiLmNha2VsYWIu",
            "YXJmbG93X2dycGMudjEuRGVwdGhGcmFtZVIKZGVwdGhGcmFtZRJPCg9neXJv",
            "c2NvcGVfZnJhbWUYBSABKAsyJi5jYWtlbGFiLmFyZmxvd19ncnBjLnYxLkd5",
            "cm9zY29wZUZyYW1lUg5neXJvc2NvcGVGcmFtZRJDCgthdWRpb19mcmFtZRgG",
            "IAEoCzIiLmNha2VsYWIuYXJmbG93X2dycGMudjEuQXVkaW9GcmFtZVIKYXVk",
            "aW9GcmFtZRJfChVwbGFuZV9kZXRlY3Rpb25fZnJhbWUYByABKAsyKy5jYWtl",
            "bGFiLmFyZmxvd19ncnBjLnYxLlBsYW5lRGV0ZWN0aW9uRnJhbWVSE3BsYW5l",
            "RGV0ZWN0aW9uRnJhbWUSbwobcG9pbnRfY2xvdWRfZGV0ZWN0aW9uX2ZyYW1l",
            "GAggASgLMjAuY2FrZWxhYi5hcmZsb3dfZ3JwYy52MS5Qb2ludENsb3VkRGV0",
            "ZWN0aW9uRnJhbWVSGHBvaW50Q2xvdWREZXRlY3Rpb25GcmFtZRJcChRtZXNo",
            "X2RldGVjdGlvbl9mcmFtZRgJIAEoCzIqLmNha2VsYWIuYXJmbG93X2dycGMu",
            "djEuTWVzaERldGVjdGlvbkZyYW1lUhJtZXNoRGV0ZWN0aW9uRnJhbWVCrQEK",
            "GmNvbS5jYWtlbGFiLmFyZmxvd19ncnBjLnYxQhhTeW5jaHJvbml6ZWRBckZy",
            "YW1lUHJvdG9QAaICA0NBWKoCFkNha2VMYWIuQVJGbG93LkdycGMuVjHKAhVD",
            "YWtlbGFiXEFyZmxvd0dycGNcVjHiAiFDYWtlbGFiXEFyZmxvd0dycGNcVjFc",
            "R1BCTWV0YWRhdGHqAhdDYWtlbGFiOjpBcmZsb3dHcnBjOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CakeLab.ARFlow.Grpc.V1.AudioFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.ColorFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.DepthFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.TransformFrameReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CakeLab.ARFlow.Grpc.V1.SynchronizedARFrame), global::CakeLab.ARFlow.Grpc.V1.SynchronizedARFrame.Parser, new[]{ "DeviceTimestamp", "TransformFrame", "ColorFrame", "DepthFrame", "GyroscopeFrame", "AudioFrame", "PlaneDetectionFrame", "PointCloudDetectionFrame", "MeshDetectionFrame" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SynchronizedARFrame : pb::IMessage<SynchronizedARFrame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SynchronizedARFrame> _parser = new pb::MessageParser<SynchronizedARFrame>(() => new SynchronizedARFrame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SynchronizedARFrame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CakeLab.ARFlow.Grpc.V1.SynchronizedArFrameReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SynchronizedARFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SynchronizedARFrame(SynchronizedARFrame other) : this() {
      deviceTimestamp_ = other.deviceTimestamp_ != null ? other.deviceTimestamp_.Clone() : null;
      transformFrame_ = other.transformFrame_ != null ? other.transformFrame_.Clone() : null;
      colorFrame_ = other.colorFrame_ != null ? other.colorFrame_.Clone() : null;
      depthFrame_ = other.depthFrame_ != null ? other.depthFrame_.Clone() : null;
      gyroscopeFrame_ = other.gyroscopeFrame_ != null ? other.gyroscopeFrame_.Clone() : null;
      audioFrame_ = other.audioFrame_ != null ? other.audioFrame_.Clone() : null;
      planeDetectionFrame_ = other.planeDetectionFrame_ != null ? other.planeDetectionFrame_.Clone() : null;
      pointCloudDetectionFrame_ = other.pointCloudDetectionFrame_ != null ? other.pointCloudDetectionFrame_.Clone() : null;
      meshDetectionFrame_ = other.meshDetectionFrame_ != null ? other.meshDetectionFrame_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SynchronizedARFrame Clone() {
      return new SynchronizedARFrame(this);
    }

    /// <summary>Field number for the "device_timestamp" field.</summary>
    public const int DeviceTimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp deviceTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DeviceTimestamp {
      get { return deviceTimestamp_; }
      set {
        deviceTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "transform_frame" field.</summary>
    public const int TransformFrameFieldNumber = 2;
    private global::CakeLab.ARFlow.Grpc.V1.TransformFrame transformFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.TransformFrame TransformFrame {
      get { return transformFrame_; }
      set {
        transformFrame_ = value;
      }
    }

    /// <summary>Field number for the "color_frame" field.</summary>
    public const int ColorFrameFieldNumber = 3;
    private global::CakeLab.ARFlow.Grpc.V1.ColorFrame colorFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.ColorFrame ColorFrame {
      get { return colorFrame_; }
      set {
        colorFrame_ = value;
      }
    }

    /// <summary>Field number for the "depth_frame" field.</summary>
    public const int DepthFrameFieldNumber = 4;
    private global::CakeLab.ARFlow.Grpc.V1.DepthFrame depthFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.DepthFrame DepthFrame {
      get { return depthFrame_; }
      set {
        depthFrame_ = value;
      }
    }

    /// <summary>Field number for the "gyroscope_frame" field.</summary>
    public const int GyroscopeFrameFieldNumber = 5;
    private global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrame gyroscopeFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrame GyroscopeFrame {
      get { return gyroscopeFrame_; }
      set {
        gyroscopeFrame_ = value;
      }
    }

    /// <summary>Field number for the "audio_frame" field.</summary>
    public const int AudioFrameFieldNumber = 6;
    private global::CakeLab.ARFlow.Grpc.V1.AudioFrame audioFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.AudioFrame AudioFrame {
      get { return audioFrame_; }
      set {
        audioFrame_ = value;
      }
    }

    /// <summary>Field number for the "plane_detection_frame" field.</summary>
    public const int PlaneDetectionFrameFieldNumber = 7;
    private global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrame planeDetectionFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrame PlaneDetectionFrame {
      get { return planeDetectionFrame_; }
      set {
        planeDetectionFrame_ = value;
      }
    }

    /// <summary>Field number for the "point_cloud_detection_frame" field.</summary>
    public const int PointCloudDetectionFrameFieldNumber = 8;
    private global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrame pointCloudDetectionFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrame PointCloudDetectionFrame {
      get { return pointCloudDetectionFrame_; }
      set {
        pointCloudDetectionFrame_ = value;
      }
    }

    /// <summary>Field number for the "mesh_detection_frame" field.</summary>
    public const int MeshDetectionFrameFieldNumber = 9;
    private global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrame meshDetectionFrame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrame MeshDetectionFrame {
      get { return meshDetectionFrame_; }
      set {
        meshDetectionFrame_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SynchronizedARFrame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SynchronizedARFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DeviceTimestamp, other.DeviceTimestamp)) return false;
      if (!object.Equals(TransformFrame, other.TransformFrame)) return false;
      if (!object.Equals(ColorFrame, other.ColorFrame)) return false;
      if (!object.Equals(DepthFrame, other.DepthFrame)) return false;
      if (!object.Equals(GyroscopeFrame, other.GyroscopeFrame)) return false;
      if (!object.Equals(AudioFrame, other.AudioFrame)) return false;
      if (!object.Equals(PlaneDetectionFrame, other.PlaneDetectionFrame)) return false;
      if (!object.Equals(PointCloudDetectionFrame, other.PointCloudDetectionFrame)) return false;
      if (!object.Equals(MeshDetectionFrame, other.MeshDetectionFrame)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (deviceTimestamp_ != null) hash ^= DeviceTimestamp.GetHashCode();
      if (transformFrame_ != null) hash ^= TransformFrame.GetHashCode();
      if (colorFrame_ != null) hash ^= ColorFrame.GetHashCode();
      if (depthFrame_ != null) hash ^= DepthFrame.GetHashCode();
      if (gyroscopeFrame_ != null) hash ^= GyroscopeFrame.GetHashCode();
      if (audioFrame_ != null) hash ^= AudioFrame.GetHashCode();
      if (planeDetectionFrame_ != null) hash ^= PlaneDetectionFrame.GetHashCode();
      if (pointCloudDetectionFrame_ != null) hash ^= PointCloudDetectionFrame.GetHashCode();
      if (meshDetectionFrame_ != null) hash ^= MeshDetectionFrame.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (deviceTimestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeviceTimestamp);
      }
      if (transformFrame_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TransformFrame);
      }
      if (colorFrame_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ColorFrame);
      }
      if (depthFrame_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DepthFrame);
      }
      if (gyroscopeFrame_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(GyroscopeFrame);
      }
      if (audioFrame_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AudioFrame);
      }
      if (planeDetectionFrame_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PlaneDetectionFrame);
      }
      if (pointCloudDetectionFrame_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PointCloudDetectionFrame);
      }
      if (meshDetectionFrame_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MeshDetectionFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (deviceTimestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeviceTimestamp);
      }
      if (transformFrame_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TransformFrame);
      }
      if (colorFrame_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ColorFrame);
      }
      if (depthFrame_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DepthFrame);
      }
      if (gyroscopeFrame_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(GyroscopeFrame);
      }
      if (audioFrame_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(AudioFrame);
      }
      if (planeDetectionFrame_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PlaneDetectionFrame);
      }
      if (pointCloudDetectionFrame_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PointCloudDetectionFrame);
      }
      if (meshDetectionFrame_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MeshDetectionFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (deviceTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceTimestamp);
      }
      if (transformFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransformFrame);
      }
      if (colorFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ColorFrame);
      }
      if (depthFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepthFrame);
      }
      if (gyroscopeFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GyroscopeFrame);
      }
      if (audioFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioFrame);
      }
      if (planeDetectionFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaneDetectionFrame);
      }
      if (pointCloudDetectionFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PointCloudDetectionFrame);
      }
      if (meshDetectionFrame_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeshDetectionFrame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SynchronizedARFrame other) {
      if (other == null) {
        return;
      }
      if (other.deviceTimestamp_ != null) {
        if (deviceTimestamp_ == null) {
          DeviceTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DeviceTimestamp.MergeFrom(other.DeviceTimestamp);
      }
      if (other.transformFrame_ != null) {
        if (transformFrame_ == null) {
          TransformFrame = new global::CakeLab.ARFlow.Grpc.V1.TransformFrame();
        }
        TransformFrame.MergeFrom(other.TransformFrame);
      }
      if (other.colorFrame_ != null) {
        if (colorFrame_ == null) {
          ColorFrame = new global::CakeLab.ARFlow.Grpc.V1.ColorFrame();
        }
        ColorFrame.MergeFrom(other.ColorFrame);
      }
      if (other.depthFrame_ != null) {
        if (depthFrame_ == null) {
          DepthFrame = new global::CakeLab.ARFlow.Grpc.V1.DepthFrame();
        }
        DepthFrame.MergeFrom(other.DepthFrame);
      }
      if (other.gyroscopeFrame_ != null) {
        if (gyroscopeFrame_ == null) {
          GyroscopeFrame = new global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrame();
        }
        GyroscopeFrame.MergeFrom(other.GyroscopeFrame);
      }
      if (other.audioFrame_ != null) {
        if (audioFrame_ == null) {
          AudioFrame = new global::CakeLab.ARFlow.Grpc.V1.AudioFrame();
        }
        AudioFrame.MergeFrom(other.AudioFrame);
      }
      if (other.planeDetectionFrame_ != null) {
        if (planeDetectionFrame_ == null) {
          PlaneDetectionFrame = new global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrame();
        }
        PlaneDetectionFrame.MergeFrom(other.PlaneDetectionFrame);
      }
      if (other.pointCloudDetectionFrame_ != null) {
        if (pointCloudDetectionFrame_ == null) {
          PointCloudDetectionFrame = new global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrame();
        }
        PointCloudDetectionFrame.MergeFrom(other.PointCloudDetectionFrame);
      }
      if (other.meshDetectionFrame_ != null) {
        if (meshDetectionFrame_ == null) {
          MeshDetectionFrame = new global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrame();
        }
        MeshDetectionFrame.MergeFrom(other.MeshDetectionFrame);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (deviceTimestamp_ == null) {
              DeviceTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeviceTimestamp);
            break;
          }
          case 18: {
            if (transformFrame_ == null) {
              TransformFrame = new global::CakeLab.ARFlow.Grpc.V1.TransformFrame();
            }
            input.ReadMessage(TransformFrame);
            break;
          }
          case 26: {
            if (colorFrame_ == null) {
              ColorFrame = new global::CakeLab.ARFlow.Grpc.V1.ColorFrame();
            }
            input.ReadMessage(ColorFrame);
            break;
          }
          case 34: {
            if (depthFrame_ == null) {
              DepthFrame = new global::CakeLab.ARFlow.Grpc.V1.DepthFrame();
            }
            input.ReadMessage(DepthFrame);
            break;
          }
          case 42: {
            if (gyroscopeFrame_ == null) {
              GyroscopeFrame = new global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrame();
            }
            input.ReadMessage(GyroscopeFrame);
            break;
          }
          case 50: {
            if (audioFrame_ == null) {
              AudioFrame = new global::CakeLab.ARFlow.Grpc.V1.AudioFrame();
            }
            input.ReadMessage(AudioFrame);
            break;
          }
          case 58: {
            if (planeDetectionFrame_ == null) {
              PlaneDetectionFrame = new global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrame();
            }
            input.ReadMessage(PlaneDetectionFrame);
            break;
          }
          case 66: {
            if (pointCloudDetectionFrame_ == null) {
              PointCloudDetectionFrame = new global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrame();
            }
            input.ReadMessage(PointCloudDetectionFrame);
            break;
          }
          case 74: {
            if (meshDetectionFrame_ == null) {
              MeshDetectionFrame = new global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrame();
            }
            input.ReadMessage(MeshDetectionFrame);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (deviceTimestamp_ == null) {
              DeviceTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeviceTimestamp);
            break;
          }
          case 18: {
            if (transformFrame_ == null) {
              TransformFrame = new global::CakeLab.ARFlow.Grpc.V1.TransformFrame();
            }
            input.ReadMessage(TransformFrame);
            break;
          }
          case 26: {
            if (colorFrame_ == null) {
              ColorFrame = new global::CakeLab.ARFlow.Grpc.V1.ColorFrame();
            }
            input.ReadMessage(ColorFrame);
            break;
          }
          case 34: {
            if (depthFrame_ == null) {
              DepthFrame = new global::CakeLab.ARFlow.Grpc.V1.DepthFrame();
            }
            input.ReadMessage(DepthFrame);
            break;
          }
          case 42: {
            if (gyroscopeFrame_ == null) {
              GyroscopeFrame = new global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrame();
            }
            input.ReadMessage(GyroscopeFrame);
            break;
          }
          case 50: {
            if (audioFrame_ == null) {
              AudioFrame = new global::CakeLab.ARFlow.Grpc.V1.AudioFrame();
            }
            input.ReadMessage(AudioFrame);
            break;
          }
          case 58: {
            if (planeDetectionFrame_ == null) {
              PlaneDetectionFrame = new global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrame();
            }
            input.ReadMessage(PlaneDetectionFrame);
            break;
          }
          case 66: {
            if (pointCloudDetectionFrame_ == null) {
              PointCloudDetectionFrame = new global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrame();
            }
            input.ReadMessage(PointCloudDetectionFrame);
            break;
          }
          case 74: {
            if (meshDetectionFrame_ == null) {
              MeshDetectionFrame = new global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrame();
            }
            input.ReadMessage(MeshDetectionFrame);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
