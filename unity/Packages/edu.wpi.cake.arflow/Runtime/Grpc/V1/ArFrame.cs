// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cakelab/arflow_grpc/v1/ar_frame.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CakeLab.ARFlow.Grpc.V1 {

  /// <summary>Holder for reflection information generated from cakelab/arflow_grpc/v1/ar_frame.proto</summary>
  public static partial class ArFrameReflection {

    #region Descriptor
    /// <summary>File descriptor for cakelab/arflow_grpc/v1/ar_frame.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ArFrameReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVjYWtlbGFiL2FyZmxvd19ncnBjL3YxL2FyX2ZyYW1lLnByb3RvEhZjYWtl",
            "bGFiLmFyZmxvd19ncnBjLnYxGihjYWtlbGFiL2FyZmxvd19ncnBjL3YxL2F1",
            "ZGlvX2ZyYW1lLnByb3RvGihjYWtlbGFiL2FyZmxvd19ncnBjL3YxL2NvbG9y",
            "X2ZyYW1lLnByb3RvGihjYWtlbGFiL2FyZmxvd19ncnBjL3YxL2RlcHRoX2Zy",
            "YW1lLnByb3RvGixjYWtlbGFiL2FyZmxvd19ncnBjL3YxL2d5cm9zY29wZV9m",
            "cmFtZS5wcm90bxoxY2FrZWxhYi9hcmZsb3dfZ3JwYy92MS9tZXNoX2RldGVj",
            "dGlvbl9mcmFtZS5wcm90bxoyY2FrZWxhYi9hcmZsb3dfZ3JwYy92MS9wbGFu",
            "ZV9kZXRlY3Rpb25fZnJhbWUucHJvdG8aOGNha2VsYWIvYXJmbG93X2dycGMv",
            "djEvcG9pbnRfY2xvdWRfZGV0ZWN0aW9uX2ZyYW1lLnByb3RvGixjYWtlbGFi",
            "L2FyZmxvd19ncnBjL3YxL3RyYW5zZm9ybV9mcmFtZS5wcm90byLCBQoHQVJG",
            "cmFtZRJRCg90cmFuc2Zvcm1fZnJhbWUYASABKAsyJi5jYWtlbGFiLmFyZmxv",
            "d19ncnBjLnYxLlRyYW5zZm9ybUZyYW1lSABSDnRyYW5zZm9ybUZyYW1lEkUK",
            "C2NvbG9yX2ZyYW1lGAIgASgLMiIuY2FrZWxhYi5hcmZsb3dfZ3JwYy52MS5D",
            "b2xvckZyYW1lSABSCmNvbG9yRnJhbWUSRQoLZGVwdGhfZnJhbWUYAyABKAsy",
            "Ii5jYWtlbGFiLmFyZmxvd19ncnBjLnYxLkRlcHRoRnJhbWVIAFIKZGVwdGhG",
            "cmFtZRJRCg9neXJvc2NvcGVfZnJhbWUYBCABKAsyJi5jYWtlbGFiLmFyZmxv",
            "d19ncnBjLnYxLkd5cm9zY29wZUZyYW1lSABSDmd5cm9zY29wZUZyYW1lEkUK",
            "C2F1ZGlvX2ZyYW1lGAUgASgLMiIuY2FrZWxhYi5hcmZsb3dfZ3JwYy52MS5B",
            "dWRpb0ZyYW1lSABSCmF1ZGlvRnJhbWUSYQoVcGxhbmVfZGV0ZWN0aW9uX2Zy",
            "YW1lGAYgASgLMisuY2FrZWxhYi5hcmZsb3dfZ3JwYy52MS5QbGFuZURldGVj",
            "dGlvbkZyYW1lSABSE3BsYW5lRGV0ZWN0aW9uRnJhbWUScQobcG9pbnRfY2xv",
            "dWRfZGV0ZWN0aW9uX2ZyYW1lGAcgASgLMjAuY2FrZWxhYi5hcmZsb3dfZ3Jw",
            "Yy52MS5Qb2ludENsb3VkRGV0ZWN0aW9uRnJhbWVIAFIYcG9pbnRDbG91ZERl",
            "dGVjdGlvbkZyYW1lEl4KFG1lc2hfZGV0ZWN0aW9uX2ZyYW1lGAggASgLMiou",
            "Y2FrZWxhYi5hcmZsb3dfZ3JwYy52MS5NZXNoRGV0ZWN0aW9uRnJhbWVIAFIS",
            "bWVzaERldGVjdGlvbkZyYW1lQgYKBGRhdGFCoQEKGmNvbS5jYWtlbGFiLmFy",
            "Zmxvd19ncnBjLnYxQgxBckZyYW1lUHJvdG9QAaICA0NBWKoCFkNha2VMYWIu",
            "QVJGbG93LkdycGMuVjHKAhVDYWtlbGFiXEFyZmxvd0dycGNcVjHiAiFDYWtl",
            "bGFiXEFyZmxvd0dycGNcVjFcR1BCTWV0YWRhdGHqAhdDYWtlbGFiOjpBcmZs",
            "b3dHcnBjOjpWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CakeLab.ARFlow.Grpc.V1.AudioFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.ColorFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.DepthFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrameReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.TransformFrameReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CakeLab.ARFlow.Grpc.V1.ARFrame), global::CakeLab.ARFlow.Grpc.V1.ARFrame.Parser, new[]{ "TransformFrame", "ColorFrame", "DepthFrame", "GyroscopeFrame", "AudioFrame", "PlaneDetectionFrame", "PointCloudDetectionFrame", "MeshDetectionFrame" }, new[]{ "Data" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ARFrame : pb::IMessage<ARFrame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ARFrame> _parser = new pb::MessageParser<ARFrame>(() => new ARFrame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ARFrame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CakeLab.ARFlow.Grpc.V1.ArFrameReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ARFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ARFrame(ARFrame other) : this() {
      switch (other.DataCase) {
        case DataOneofCase.TransformFrame:
          TransformFrame = other.TransformFrame.Clone();
          break;
        case DataOneofCase.ColorFrame:
          ColorFrame = other.ColorFrame.Clone();
          break;
        case DataOneofCase.DepthFrame:
          DepthFrame = other.DepthFrame.Clone();
          break;
        case DataOneofCase.GyroscopeFrame:
          GyroscopeFrame = other.GyroscopeFrame.Clone();
          break;
        case DataOneofCase.AudioFrame:
          AudioFrame = other.AudioFrame.Clone();
          break;
        case DataOneofCase.PlaneDetectionFrame:
          PlaneDetectionFrame = other.PlaneDetectionFrame.Clone();
          break;
        case DataOneofCase.PointCloudDetectionFrame:
          PointCloudDetectionFrame = other.PointCloudDetectionFrame.Clone();
          break;
        case DataOneofCase.MeshDetectionFrame:
          MeshDetectionFrame = other.MeshDetectionFrame.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ARFrame Clone() {
      return new ARFrame(this);
    }

    /// <summary>Field number for the "transform_frame" field.</summary>
    public const int TransformFrameFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.TransformFrame TransformFrame {
      get { return dataCase_ == DataOneofCase.TransformFrame ? (global::CakeLab.ARFlow.Grpc.V1.TransformFrame) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.TransformFrame;
      }
    }

    /// <summary>Field number for the "color_frame" field.</summary>
    public const int ColorFrameFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.ColorFrame ColorFrame {
      get { return dataCase_ == DataOneofCase.ColorFrame ? (global::CakeLab.ARFlow.Grpc.V1.ColorFrame) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.ColorFrame;
      }
    }

    /// <summary>Field number for the "depth_frame" field.</summary>
    public const int DepthFrameFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.DepthFrame DepthFrame {
      get { return dataCase_ == DataOneofCase.DepthFrame ? (global::CakeLab.ARFlow.Grpc.V1.DepthFrame) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.DepthFrame;
      }
    }

    /// <summary>Field number for the "gyroscope_frame" field.</summary>
    public const int GyroscopeFrameFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrame GyroscopeFrame {
      get { return dataCase_ == DataOneofCase.GyroscopeFrame ? (global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrame) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GyroscopeFrame;
      }
    }

    /// <summary>Field number for the "audio_frame" field.</summary>
    public const int AudioFrameFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.AudioFrame AudioFrame {
      get { return dataCase_ == DataOneofCase.AudioFrame ? (global::CakeLab.ARFlow.Grpc.V1.AudioFrame) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.AudioFrame;
      }
    }

    /// <summary>Field number for the "plane_detection_frame" field.</summary>
    public const int PlaneDetectionFrameFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrame PlaneDetectionFrame {
      get { return dataCase_ == DataOneofCase.PlaneDetectionFrame ? (global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrame) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.PlaneDetectionFrame;
      }
    }

    /// <summary>Field number for the "point_cloud_detection_frame" field.</summary>
    public const int PointCloudDetectionFrameFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrame PointCloudDetectionFrame {
      get { return dataCase_ == DataOneofCase.PointCloudDetectionFrame ? (global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrame) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.PointCloudDetectionFrame;
      }
    }

    /// <summary>Field number for the "mesh_detection_frame" field.</summary>
    public const int MeshDetectionFrameFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrame MeshDetectionFrame {
      get { return dataCase_ == DataOneofCase.MeshDetectionFrame ? (global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrame) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.MeshDetectionFrame;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      TransformFrame = 1,
      ColorFrame = 2,
      DepthFrame = 3,
      GyroscopeFrame = 4,
      AudioFrame = 5,
      PlaneDetectionFrame = 6,
      PointCloudDetectionFrame = 7,
      MeshDetectionFrame = 8,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ARFrame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ARFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TransformFrame, other.TransformFrame)) return false;
      if (!object.Equals(ColorFrame, other.ColorFrame)) return false;
      if (!object.Equals(DepthFrame, other.DepthFrame)) return false;
      if (!object.Equals(GyroscopeFrame, other.GyroscopeFrame)) return false;
      if (!object.Equals(AudioFrame, other.AudioFrame)) return false;
      if (!object.Equals(PlaneDetectionFrame, other.PlaneDetectionFrame)) return false;
      if (!object.Equals(PointCloudDetectionFrame, other.PointCloudDetectionFrame)) return false;
      if (!object.Equals(MeshDetectionFrame, other.MeshDetectionFrame)) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.TransformFrame) hash ^= TransformFrame.GetHashCode();
      if (dataCase_ == DataOneofCase.ColorFrame) hash ^= ColorFrame.GetHashCode();
      if (dataCase_ == DataOneofCase.DepthFrame) hash ^= DepthFrame.GetHashCode();
      if (dataCase_ == DataOneofCase.GyroscopeFrame) hash ^= GyroscopeFrame.GetHashCode();
      if (dataCase_ == DataOneofCase.AudioFrame) hash ^= AudioFrame.GetHashCode();
      if (dataCase_ == DataOneofCase.PlaneDetectionFrame) hash ^= PlaneDetectionFrame.GetHashCode();
      if (dataCase_ == DataOneofCase.PointCloudDetectionFrame) hash ^= PointCloudDetectionFrame.GetHashCode();
      if (dataCase_ == DataOneofCase.MeshDetectionFrame) hash ^= MeshDetectionFrame.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dataCase_ == DataOneofCase.TransformFrame) {
        output.WriteRawTag(10);
        output.WriteMessage(TransformFrame);
      }
      if (dataCase_ == DataOneofCase.ColorFrame) {
        output.WriteRawTag(18);
        output.WriteMessage(ColorFrame);
      }
      if (dataCase_ == DataOneofCase.DepthFrame) {
        output.WriteRawTag(26);
        output.WriteMessage(DepthFrame);
      }
      if (dataCase_ == DataOneofCase.GyroscopeFrame) {
        output.WriteRawTag(34);
        output.WriteMessage(GyroscopeFrame);
      }
      if (dataCase_ == DataOneofCase.AudioFrame) {
        output.WriteRawTag(42);
        output.WriteMessage(AudioFrame);
      }
      if (dataCase_ == DataOneofCase.PlaneDetectionFrame) {
        output.WriteRawTag(50);
        output.WriteMessage(PlaneDetectionFrame);
      }
      if (dataCase_ == DataOneofCase.PointCloudDetectionFrame) {
        output.WriteRawTag(58);
        output.WriteMessage(PointCloudDetectionFrame);
      }
      if (dataCase_ == DataOneofCase.MeshDetectionFrame) {
        output.WriteRawTag(66);
        output.WriteMessage(MeshDetectionFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dataCase_ == DataOneofCase.TransformFrame) {
        output.WriteRawTag(10);
        output.WriteMessage(TransformFrame);
      }
      if (dataCase_ == DataOneofCase.ColorFrame) {
        output.WriteRawTag(18);
        output.WriteMessage(ColorFrame);
      }
      if (dataCase_ == DataOneofCase.DepthFrame) {
        output.WriteRawTag(26);
        output.WriteMessage(DepthFrame);
      }
      if (dataCase_ == DataOneofCase.GyroscopeFrame) {
        output.WriteRawTag(34);
        output.WriteMessage(GyroscopeFrame);
      }
      if (dataCase_ == DataOneofCase.AudioFrame) {
        output.WriteRawTag(42);
        output.WriteMessage(AudioFrame);
      }
      if (dataCase_ == DataOneofCase.PlaneDetectionFrame) {
        output.WriteRawTag(50);
        output.WriteMessage(PlaneDetectionFrame);
      }
      if (dataCase_ == DataOneofCase.PointCloudDetectionFrame) {
        output.WriteRawTag(58);
        output.WriteMessage(PointCloudDetectionFrame);
      }
      if (dataCase_ == DataOneofCase.MeshDetectionFrame) {
        output.WriteRawTag(66);
        output.WriteMessage(MeshDetectionFrame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.TransformFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransformFrame);
      }
      if (dataCase_ == DataOneofCase.ColorFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ColorFrame);
      }
      if (dataCase_ == DataOneofCase.DepthFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepthFrame);
      }
      if (dataCase_ == DataOneofCase.GyroscopeFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GyroscopeFrame);
      }
      if (dataCase_ == DataOneofCase.AudioFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioFrame);
      }
      if (dataCase_ == DataOneofCase.PlaneDetectionFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaneDetectionFrame);
      }
      if (dataCase_ == DataOneofCase.PointCloudDetectionFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PointCloudDetectionFrame);
      }
      if (dataCase_ == DataOneofCase.MeshDetectionFrame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeshDetectionFrame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ARFrame other) {
      if (other == null) {
        return;
      }
      switch (other.DataCase) {
        case DataOneofCase.TransformFrame:
          if (TransformFrame == null) {
            TransformFrame = new global::CakeLab.ARFlow.Grpc.V1.TransformFrame();
          }
          TransformFrame.MergeFrom(other.TransformFrame);
          break;
        case DataOneofCase.ColorFrame:
          if (ColorFrame == null) {
            ColorFrame = new global::CakeLab.ARFlow.Grpc.V1.ColorFrame();
          }
          ColorFrame.MergeFrom(other.ColorFrame);
          break;
        case DataOneofCase.DepthFrame:
          if (DepthFrame == null) {
            DepthFrame = new global::CakeLab.ARFlow.Grpc.V1.DepthFrame();
          }
          DepthFrame.MergeFrom(other.DepthFrame);
          break;
        case DataOneofCase.GyroscopeFrame:
          if (GyroscopeFrame == null) {
            GyroscopeFrame = new global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrame();
          }
          GyroscopeFrame.MergeFrom(other.GyroscopeFrame);
          break;
        case DataOneofCase.AudioFrame:
          if (AudioFrame == null) {
            AudioFrame = new global::CakeLab.ARFlow.Grpc.V1.AudioFrame();
          }
          AudioFrame.MergeFrom(other.AudioFrame);
          break;
        case DataOneofCase.PlaneDetectionFrame:
          if (PlaneDetectionFrame == null) {
            PlaneDetectionFrame = new global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrame();
          }
          PlaneDetectionFrame.MergeFrom(other.PlaneDetectionFrame);
          break;
        case DataOneofCase.PointCloudDetectionFrame:
          if (PointCloudDetectionFrame == null) {
            PointCloudDetectionFrame = new global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrame();
          }
          PointCloudDetectionFrame.MergeFrom(other.PointCloudDetectionFrame);
          break;
        case DataOneofCase.MeshDetectionFrame:
          if (MeshDetectionFrame == null) {
            MeshDetectionFrame = new global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrame();
          }
          MeshDetectionFrame.MergeFrom(other.MeshDetectionFrame);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::CakeLab.ARFlow.Grpc.V1.TransformFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.TransformFrame();
            if (dataCase_ == DataOneofCase.TransformFrame) {
              subBuilder.MergeFrom(TransformFrame);
            }
            input.ReadMessage(subBuilder);
            TransformFrame = subBuilder;
            break;
          }
          case 18: {
            global::CakeLab.ARFlow.Grpc.V1.ColorFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.ColorFrame();
            if (dataCase_ == DataOneofCase.ColorFrame) {
              subBuilder.MergeFrom(ColorFrame);
            }
            input.ReadMessage(subBuilder);
            ColorFrame = subBuilder;
            break;
          }
          case 26: {
            global::CakeLab.ARFlow.Grpc.V1.DepthFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.DepthFrame();
            if (dataCase_ == DataOneofCase.DepthFrame) {
              subBuilder.MergeFrom(DepthFrame);
            }
            input.ReadMessage(subBuilder);
            DepthFrame = subBuilder;
            break;
          }
          case 34: {
            global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrame();
            if (dataCase_ == DataOneofCase.GyroscopeFrame) {
              subBuilder.MergeFrom(GyroscopeFrame);
            }
            input.ReadMessage(subBuilder);
            GyroscopeFrame = subBuilder;
            break;
          }
          case 42: {
            global::CakeLab.ARFlow.Grpc.V1.AudioFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.AudioFrame();
            if (dataCase_ == DataOneofCase.AudioFrame) {
              subBuilder.MergeFrom(AudioFrame);
            }
            input.ReadMessage(subBuilder);
            AudioFrame = subBuilder;
            break;
          }
          case 50: {
            global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrame();
            if (dataCase_ == DataOneofCase.PlaneDetectionFrame) {
              subBuilder.MergeFrom(PlaneDetectionFrame);
            }
            input.ReadMessage(subBuilder);
            PlaneDetectionFrame = subBuilder;
            break;
          }
          case 58: {
            global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrame();
            if (dataCase_ == DataOneofCase.PointCloudDetectionFrame) {
              subBuilder.MergeFrom(PointCloudDetectionFrame);
            }
            input.ReadMessage(subBuilder);
            PointCloudDetectionFrame = subBuilder;
            break;
          }
          case 66: {
            global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrame();
            if (dataCase_ == DataOneofCase.MeshDetectionFrame) {
              subBuilder.MergeFrom(MeshDetectionFrame);
            }
            input.ReadMessage(subBuilder);
            MeshDetectionFrame = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::CakeLab.ARFlow.Grpc.V1.TransformFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.TransformFrame();
            if (dataCase_ == DataOneofCase.TransformFrame) {
              subBuilder.MergeFrom(TransformFrame);
            }
            input.ReadMessage(subBuilder);
            TransformFrame = subBuilder;
            break;
          }
          case 18: {
            global::CakeLab.ARFlow.Grpc.V1.ColorFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.ColorFrame();
            if (dataCase_ == DataOneofCase.ColorFrame) {
              subBuilder.MergeFrom(ColorFrame);
            }
            input.ReadMessage(subBuilder);
            ColorFrame = subBuilder;
            break;
          }
          case 26: {
            global::CakeLab.ARFlow.Grpc.V1.DepthFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.DepthFrame();
            if (dataCase_ == DataOneofCase.DepthFrame) {
              subBuilder.MergeFrom(DepthFrame);
            }
            input.ReadMessage(subBuilder);
            DepthFrame = subBuilder;
            break;
          }
          case 34: {
            global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.GyroscopeFrame();
            if (dataCase_ == DataOneofCase.GyroscopeFrame) {
              subBuilder.MergeFrom(GyroscopeFrame);
            }
            input.ReadMessage(subBuilder);
            GyroscopeFrame = subBuilder;
            break;
          }
          case 42: {
            global::CakeLab.ARFlow.Grpc.V1.AudioFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.AudioFrame();
            if (dataCase_ == DataOneofCase.AudioFrame) {
              subBuilder.MergeFrom(AudioFrame);
            }
            input.ReadMessage(subBuilder);
            AudioFrame = subBuilder;
            break;
          }
          case 50: {
            global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.PlaneDetectionFrame();
            if (dataCase_ == DataOneofCase.PlaneDetectionFrame) {
              subBuilder.MergeFrom(PlaneDetectionFrame);
            }
            input.ReadMessage(subBuilder);
            PlaneDetectionFrame = subBuilder;
            break;
          }
          case 58: {
            global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.PointCloudDetectionFrame();
            if (dataCase_ == DataOneofCase.PointCloudDetectionFrame) {
              subBuilder.MergeFrom(PointCloudDetectionFrame);
            }
            input.ReadMessage(subBuilder);
            PointCloudDetectionFrame = subBuilder;
            break;
          }
          case 66: {
            global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrame subBuilder = new global::CakeLab.ARFlow.Grpc.V1.MeshDetectionFrame();
            if (dataCase_ == DataOneofCase.MeshDetectionFrame) {
              subBuilder.MergeFrom(MeshDetectionFrame);
            }
            input.ReadMessage(subBuilder);
            MeshDetectionFrame = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
