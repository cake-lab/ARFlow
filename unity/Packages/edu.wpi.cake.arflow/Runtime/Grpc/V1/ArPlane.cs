// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cakelab/arflow_grpc/v1/ar_plane.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CakeLab.ARFlow.Grpc.V1 {

  /// <summary>Holder for reflection information generated from cakelab/arflow_grpc/v1/ar_plane.proto</summary>
  public static partial class ArPlaneReflection {

    #region Descriptor
    /// <summary>File descriptor for cakelab/arflow_grpc/v1/ar_plane.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ArPlaneReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVjYWtlbGFiL2FyZmxvd19ncnBjL3YxL2FyX3BsYW5lLnByb3RvEhZjYWtl",
            "bGFiLmFyZmxvd19ncnBjLnYxGiljYWtlbGFiL2FyZmxvd19ncnBjL3YxL2Fy",
            "X3RyYWNrYWJsZS5wcm90bxokY2FrZWxhYi9hcmZsb3dfZ3JwYy92MS92ZWN0",
            "b3IyLnByb3RvGiRjYWtlbGFiL2FyZmxvd19ncnBjL3YxL3ZlY3RvcjMucHJv",
            "dG8inwMKB0FSUGxhbmUSQQoJdHJhY2thYmxlGAEgASgLMiMuY2FrZWxhYi5h",
            "cmZsb3dfZ3JwYy52MS5BUlRyYWNrYWJsZVIJdHJhY2thYmxlEjsKCGJvdW5k",
            "YXJ5GAIgAygLMh8uY2FrZWxhYi5hcmZsb3dfZ3JwYy52MS5WZWN0b3IyUghi",
            "b3VuZGFyeRI3CgZjZW50ZXIYAyABKAsyHy5jYWtlbGFiLmFyZmxvd19ncnBj",
            "LnYxLlZlY3RvcjNSBmNlbnRlchI3CgZub3JtYWwYBCABKAsyHy5jYWtlbGFi",
            "LmFyZmxvd19ncnBjLnYxLlZlY3RvcjNSBm5vcm1hbBIzCgRzaXplGAUgASgL",
            "Mh8uY2FrZWxhYi5hcmZsb3dfZ3JwYy52MS5WZWN0b3IyUgRzaXplEloKDnN1",
            "YnN1bWVkX2J5X2lkGAYgASgLMi8uY2FrZWxhYi5hcmZsb3dfZ3JwYy52MS5B",
            "UlRyYWNrYWJsZS5UcmFja2FibGVJZEgAUgxzdWJzdW1lZEJ5SWSIAQFCEQoP",
            "X3N1YnN1bWVkX2J5X2lkQqEBChpjb20uY2FrZWxhYi5hcmZsb3dfZ3JwYy52",
            "MUIMQXJQbGFuZVByb3RvUAGiAgNDQViqAhZDYWtlTGFiLkFSRmxvdy5HcnBj",
            "LlYxygIVQ2FrZWxhYlxBcmZsb3dHcnBjXFYx4gIhQ2FrZWxhYlxBcmZsb3dH",
            "cnBjXFYxXEdQQk1ldGFkYXRh6gIXQ2FrZWxhYjo6QXJmbG93R3JwYzo6VjFi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::CakeLab.ARFlow.Grpc.V1.ArTrackableReflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.Vector2Reflection.Descriptor, global::CakeLab.ARFlow.Grpc.V1.Vector3Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CakeLab.ARFlow.Grpc.V1.ARPlane), global::CakeLab.ARFlow.Grpc.V1.ARPlane.Parser, new[]{ "Trackable", "Boundary", "Center", "Normal", "Size", "SubsumedById" }, new[]{ "SubsumedById" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///&#x2F; https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.0/api/UnityEngine.XR.ARFoundation.ARPlane.html#UnityEngine_XR_ARFoundation_ARPlane
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ARPlane : pb::IMessage<ARPlane>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ARPlane> _parser = new pb::MessageParser<ARPlane>(() => new ARPlane());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ARPlane> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CakeLab.ARFlow.Grpc.V1.ArPlaneReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ARPlane() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ARPlane(ARPlane other) : this() {
      trackable_ = other.trackable_ != null ? other.trackable_.Clone() : null;
      boundary_ = other.boundary_.Clone();
      center_ = other.center_ != null ? other.center_.Clone() : null;
      normal_ = other.normal_ != null ? other.normal_.Clone() : null;
      size_ = other.size_ != null ? other.size_.Clone() : null;
      subsumedById_ = other.subsumedById_ != null ? other.subsumedById_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ARPlane Clone() {
      return new ARPlane(this);
    }

    /// <summary>Field number for the "trackable" field.</summary>
    public const int TrackableFieldNumber = 1;
    private global::CakeLab.ARFlow.Grpc.V1.ARTrackable trackable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.ARTrackable Trackable {
      get { return trackable_; }
      set {
        trackable_ = value;
      }
    }

    /// <summary>Field number for the "boundary" field.</summary>
    public const int BoundaryFieldNumber = 2;
    private static readonly pb::FieldCodec<global::CakeLab.ARFlow.Grpc.V1.Vector2> _repeated_boundary_codec
        = pb::FieldCodec.ForMessage(18, global::CakeLab.ARFlow.Grpc.V1.Vector2.Parser);
    private readonly pbc::RepeatedField<global::CakeLab.ARFlow.Grpc.V1.Vector2> boundary_ = new pbc::RepeatedField<global::CakeLab.ARFlow.Grpc.V1.Vector2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CakeLab.ARFlow.Grpc.V1.Vector2> Boundary {
      get { return boundary_; }
    }

    /// <summary>Field number for the "center" field.</summary>
    public const int CenterFieldNumber = 3;
    private global::CakeLab.ARFlow.Grpc.V1.Vector3 center_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.Vector3 Center {
      get { return center_; }
      set {
        center_ = value;
      }
    }

    /// <summary>Field number for the "normal" field.</summary>
    public const int NormalFieldNumber = 4;
    private global::CakeLab.ARFlow.Grpc.V1.Vector3 normal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.Vector3 Normal {
      get { return normal_; }
      set {
        normal_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 5;
    private global::CakeLab.ARFlow.Grpc.V1.Vector2 size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.Vector2 Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "subsumed_by_id" field.</summary>
    public const int SubsumedByIdFieldNumber = 6;
    private global::CakeLab.ARFlow.Grpc.V1.ARTrackable.Types.TrackableId subsumedById_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CakeLab.ARFlow.Grpc.V1.ARTrackable.Types.TrackableId SubsumedById {
      get { return subsumedById_; }
      set {
        subsumedById_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ARPlane);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ARPlane other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Trackable, other.Trackable)) return false;
      if(!boundary_.Equals(other.boundary_)) return false;
      if (!object.Equals(Center, other.Center)) return false;
      if (!object.Equals(Normal, other.Normal)) return false;
      if (!object.Equals(Size, other.Size)) return false;
      if (!object.Equals(SubsumedById, other.SubsumedById)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (trackable_ != null) hash ^= Trackable.GetHashCode();
      hash ^= boundary_.GetHashCode();
      if (center_ != null) hash ^= Center.GetHashCode();
      if (normal_ != null) hash ^= Normal.GetHashCode();
      if (size_ != null) hash ^= Size.GetHashCode();
      if (subsumedById_ != null) hash ^= SubsumedById.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (trackable_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Trackable);
      }
      boundary_.WriteTo(output, _repeated_boundary_codec);
      if (center_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Center);
      }
      if (normal_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Normal);
      }
      if (size_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Size);
      }
      if (subsumedById_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SubsumedById);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (trackable_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Trackable);
      }
      boundary_.WriteTo(ref output, _repeated_boundary_codec);
      if (center_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Center);
      }
      if (normal_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Normal);
      }
      if (size_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Size);
      }
      if (subsumedById_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SubsumedById);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (trackable_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trackable);
      }
      size += boundary_.CalculateSize(_repeated_boundary_codec);
      if (center_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Center);
      }
      if (normal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Normal);
      }
      if (size_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Size);
      }
      if (subsumedById_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubsumedById);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ARPlane other) {
      if (other == null) {
        return;
      }
      if (other.trackable_ != null) {
        if (trackable_ == null) {
          Trackable = new global::CakeLab.ARFlow.Grpc.V1.ARTrackable();
        }
        Trackable.MergeFrom(other.Trackable);
      }
      boundary_.Add(other.boundary_);
      if (other.center_ != null) {
        if (center_ == null) {
          Center = new global::CakeLab.ARFlow.Grpc.V1.Vector3();
        }
        Center.MergeFrom(other.Center);
      }
      if (other.normal_ != null) {
        if (normal_ == null) {
          Normal = new global::CakeLab.ARFlow.Grpc.V1.Vector3();
        }
        Normal.MergeFrom(other.Normal);
      }
      if (other.size_ != null) {
        if (size_ == null) {
          Size = new global::CakeLab.ARFlow.Grpc.V1.Vector2();
        }
        Size.MergeFrom(other.Size);
      }
      if (other.subsumedById_ != null) {
        if (subsumedById_ == null) {
          SubsumedById = new global::CakeLab.ARFlow.Grpc.V1.ARTrackable.Types.TrackableId();
        }
        SubsumedById.MergeFrom(other.SubsumedById);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (trackable_ == null) {
              Trackable = new global::CakeLab.ARFlow.Grpc.V1.ARTrackable();
            }
            input.ReadMessage(Trackable);
            break;
          }
          case 18: {
            boundary_.AddEntriesFrom(input, _repeated_boundary_codec);
            break;
          }
          case 26: {
            if (center_ == null) {
              Center = new global::CakeLab.ARFlow.Grpc.V1.Vector3();
            }
            input.ReadMessage(Center);
            break;
          }
          case 34: {
            if (normal_ == null) {
              Normal = new global::CakeLab.ARFlow.Grpc.V1.Vector3();
            }
            input.ReadMessage(Normal);
            break;
          }
          case 42: {
            if (size_ == null) {
              Size = new global::CakeLab.ARFlow.Grpc.V1.Vector2();
            }
            input.ReadMessage(Size);
            break;
          }
          case 50: {
            if (subsumedById_ == null) {
              SubsumedById = new global::CakeLab.ARFlow.Grpc.V1.ARTrackable.Types.TrackableId();
            }
            input.ReadMessage(SubsumedById);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (trackable_ == null) {
              Trackable = new global::CakeLab.ARFlow.Grpc.V1.ARTrackable();
            }
            input.ReadMessage(Trackable);
            break;
          }
          case 18: {
            boundary_.AddEntriesFrom(ref input, _repeated_boundary_codec);
            break;
          }
          case 26: {
            if (center_ == null) {
              Center = new global::CakeLab.ARFlow.Grpc.V1.Vector3();
            }
            input.ReadMessage(Center);
            break;
          }
          case 34: {
            if (normal_ == null) {
              Normal = new global::CakeLab.ARFlow.Grpc.V1.Vector3();
            }
            input.ReadMessage(Normal);
            break;
          }
          case 42: {
            if (size_ == null) {
              Size = new global::CakeLab.ARFlow.Grpc.V1.Vector2();
            }
            input.ReadMessage(Size);
            break;
          }
          case 50: {
            if (subsumedById_ == null) {
              SubsumedById = new global::CakeLab.ARFlow.Grpc.V1.ARTrackable.Types.TrackableId();
            }
            input.ReadMessage(SubsumedById);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
